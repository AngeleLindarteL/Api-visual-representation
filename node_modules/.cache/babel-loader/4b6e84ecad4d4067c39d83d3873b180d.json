{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Angel\\\\Documents\\\\proyectos\\\\estudios-y-pruebas\\\\lreact-all\\\\src\\\\components\\\\hello.jsx\";\nimport React, { Fragment, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Greeting = props => {\n  let obtainData = async () => {\n    let crude = await fetch('https://jsonplaceholder.typicode.com/users');\n    let response = await crude.json();\n    let finalData = await response[0];\n    console.log(await finalData);\n    return await response;\n  };\n\n  let obtainName = async id => {\n    console.log(await obtainData());\n    return await obtainData();\n  };\n\n  obtainName(1);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: \"hello! \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Greeting;\nexport default Greeting;\n\nvar _c;\n\n$RefreshReg$(_c, \"Greeting\");","map":{"version":3,"sources":["C:/Users/Angel/Documents/proyectos/estudios-y-pruebas/lreact-all/src/components/hello.jsx"],"names":["React","Fragment","useEffect","Greeting","props","obtainData","crude","fetch","response","json","finalData","console","log","obtainName","id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAExB,MAAIC,UAAU,GAAG,YAAY;AACzB,QAAIC,KAAK,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAAvB;AACA,QAAIC,QAAQ,GAAG,MAAMF,KAAK,CAACG,IAAN,EAArB;AACA,QAAIC,SAAS,GAAG,MAAMF,QAAQ,CAAC,CAAD,CAA9B;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAMF,SAAlB;AACA,WAAO,MAAMF,QAAb;AACH,GAND;;AAQA,MAAIK,UAAU,GAAG,MAAOC,EAAP,IAAc;AAE3BH,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAMP,UAAU,EAA5B;AACA,WAAO,MAAMA,UAAU,EAAvB;AACH,GAJD;;AAMAQ,EAAAA,UAAU,CAAC,CAAD,CAAV;AAEA,sBACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAvBD;;KAAMV,Q;AAyBN,eAAeA,QAAf","sourcesContent":["import React, {Fragment, useEffect} from 'react';\r\n\r\nconst Greeting = (props) => {\r\n\r\n    let obtainData = async () => {\r\n        let crude = await fetch('https://jsonplaceholder.typicode.com/users');\r\n        let response = await crude.json();\r\n        let finalData = await response[0]\r\n        console.log(await finalData)\r\n        return await response\r\n    }\r\n\r\n    let obtainName = async (id) => {\r\n\r\n        console.log(await obtainData())\r\n        return await obtainData()\r\n    }\r\n\r\n    obtainName(1)\r\n\r\n    return(\r\n        <Fragment>\r\n            hello! {}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Greeting;"]},"metadata":{},"sourceType":"module"}